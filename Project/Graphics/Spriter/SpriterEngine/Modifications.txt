Alot of modifications have been made to this code to remove compiler warnings and to make it work as a sfml drawable.

replaced std::string with our engine string instead. (All places where std::string is used has been replaced by Core::String)

These modifications redefines the following.

typedef double real; -> typedef float real;

added typedef for our vector instead of spriterEngines point.

added typedef to use size_t instead of int in checks where size_t was returned from stdlib.
All places where this was done has been replaced by this.

Turned universalObjectInterface methods getPosition, getAngle, getScale, getPivot, getAlpha, getSize to const



Added sf::Drawable to universalObjectInterface to be able to use sf::renderwindow::draw method instead.
Impleted overrides for EntityInstance and SpriteObjectInfo

Added sf::Drawable to ImageFile to be able to use sf::renderwindow::draw method instead.

Added custom preRenderSprite method to ImageFile to set parameters for sprite before rendering it.


Changed EntityInstance *getNewEntityInstance(std::string entityName)
to  EntityInstance *getNewEntityInstance(Core::String entityName, SpriteRef* sprite=nullptr)
to allow us to set a specific sprite for the entire object as we use sprite sheets for the textures.

Added a private member SpriteRef* _sprite, so we can use our desired sprite when creating a new entity instance.

Changed filefactory virtual ImageFile *newImageFile(const Core::String &initialFilePath, point initialDefaultPivot)
to virtual ImageFile *newImageFile(const Core::String &initialFilePath, point initialDefaultPivot, SpriteRef* sprite=nullptr)

to allow the factory to use our sprite sheet as the sprite source.